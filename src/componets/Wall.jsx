/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.7 wall.gltf
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useBox } from '@react-three/cannon'

export function Wall(props) {
  const { nodes, materials } = useGLTF('/wall.gltf')

  const [ref1] = useBox(() => ({
  type: 'Static',
  args: [14, 0.4, 4.4],
  position: [19.8, 2, 13],
  rotation: [Math.PI / 2, 0, -Math.PI / 2]
}))

const [ref2] = useBox(() => ({
  type: 'Static',
  args: [40, 0.4, 4.4],
  position: [0, 2, -19.8],
  rotation: [Math.PI / 2, 0, Math.PI]
}))

const [ref3] = useBox(() => ({
  type: 'Static',
  args: [40, 0.4, 4.4],
  position: [0, 2, 19.8],
  rotation: [Math.PI / 2, 0, Math.PI]
}))

const [ref4] = useBox(() => ({
  type: 'Static',
  args: [40, 0.4, 4.4],
  position: [-20.2, 2, 0],
  rotation: [Math.PI / 2, 0, -Math.PI / 2]
}))

const [ref5] = useBox(() => ({
  type: 'Static',
  args: [14, 0.4, 4.4],
  position: [19.8, 2, -13],
  rotation: [Math.PI / 2, 0, -Math.PI / 2]
}))

const [ref6] = useBox(() => ({
  type: 'Static',
  args: [14, 0.2, 4.4],
  position: [9, 2, -13],
  rotation: [Math.PI / 2, 0, -Math.PI / 2]
}))

const [ref7] = useBox(() => ({
  type: 'Static',
  args: [14, 0.2, 4.4],
  position: [9, 2, 13],
  rotation: [Math.PI / 2, 0, -Math.PI / 2]
}))

const [ref8] = useBox(() => ({
  type: 'Static',
  args: [14, 0.2, 4.4],
  position: [-1.8, 2, 13],
  rotation: [Math.PI / 2, 0, -Math.PI / 2]
}))

const [ref9] = useBox(() => ({
  type: 'Static',
  args: [14, 0.2, 4.4],
  position: [-1.8, 2, -13],
  rotation: [Math.PI / 2, 0, -Math.PI / 2]
}))

const [ref10] = useBox(() => ({
  type: 'Static',
  args: [1.4, 0.2, 13.62],
  position: [19, 1.12, 12.815],
}))

const [ref11] = useBox(() => ({
  type: 'Static',
  args: [1.4, 0.2, 13.62],
  position: [9.755, 1.12, 12.815],
}))

const [ref12] = useBox(() => ({
  type: 'Static',
  args: [1.4, 0.2, 13.62],
  position: [-1.028, 1.12, 12.815],
}))

const [ref13] = useBox(() => ({
  type: 'Static',
  args: [1.4, 0.2, 13.62],
  position: [8.217, 1.12, 12.815],
}))

const [ref14] = useBox(() => ({
  type: 'Static',
  args: [1.4, 0.2, 13.62],
  position: [8.217, 1.12, -12.811],
}))

const [ref15] = useBox(() => ({
  type: 'Static',
  args: [1.4, 0.2, 13.62],
  position: [-1.028, 1.12, -12.811],
}))

const [ref16] = useBox(() => ({
  type: 'Static',
  args: [1.4, 0.2, 13.62],
  position: [9.755, 1.12, -12.811],
}))

const [ref17] = useBox(() => ({
  type: 'Static',
  args: [1.4, 0.2, 13.62],
  position: [19, 1.12, -12.811],
}))

  return (
    <group {...props} dispose={null}>
      <mesh ref={ref1} geometry={nodes.Cube003.geometry} material={materials['Material.006']} position={[19.8, 2, 13]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[7, 0.2, 2.2]} />
      <mesh ref={ref2} geometry={nodes.Cube004.geometry} material={materials['Material.006']} position={[0, 2, -19.8]} rotation={[Math.PI / 2, 0, Math.PI]} scale={[20, 0.2, 2.2]} />
      <mesh ref={ref3} geometry={nodes.Cube005.geometry} material={materials['Material.006']} position={[0, 2, 19.8]} rotation={[Math.PI / 2, 0, Math.PI]} scale={[20, 0.2, 2.2]} />
      <mesh ref={ref4} geometry={nodes.Cube006.geometry} material={materials['Material.006']} position={[-20.2, 2, 0]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[20, 0.2, 2.2]} />
      <mesh ref={ref5} geometry={nodes.Cube007.geometry} material={materials['Material.006']} position={[19.8, 2, -13]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[7, 0.2, 2.2]} />
      <mesh ref={ref6} geometry={nodes.Cube008.geometry} material={materials['Material.006']} position={[9, 2, -13]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[7, 0.1, 2.2]} />
      <mesh ref={ref7} geometry={nodes.Cube009.geometry} material={materials['Material.006']} position={[9, 2, 13]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[7, 0.1, 2.2]} />
      <mesh ref={ref8} geometry={nodes.Cube010.geometry} material={materials['Material.006']} position={[-1.8, 2, 13]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[7, 0.1, 2.2]} />
      <mesh ref={ref9} geometry={nodes.Cube011.geometry} material={materials['Material.006']} position={[-1.8, 2, -13]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[7, 0.1, 2.2]} />
      <mesh ref={ref10} geometry={nodes.Cube012.geometry} material={materials['Material.006']} position={[19, 1.12, 12.815]} scale={[0.7, 0.1, 6.81]} />
      <mesh ref={ref11} geometry={nodes.Cube013.geometry} material={materials['Material.006']} position={[9.755, 1.12, 12.815]} scale={[0.7, 0.1, 6.81]} />
      <mesh ref={ref12} geometry={nodes.Cube014.geometry} material={materials['Material.006']} position={[-1.028, 1.12, 12.815]} scale={[0.7, 0.1, 6.81]} />
      <mesh ref={ref13} geometry={nodes.Cube015.geometry} material={materials['Material.006']} position={[8.217, 1.12, 12.815]} scale={[0.7, 0.1, 6.81]} />
      <mesh ref={ref14} geometry={nodes.Cube016.geometry} material={materials['Material.006']} position={[8.217, 1.12, -12.811]} scale={[0.7, 0.1, 6.81]} />
      <mesh ref={ref15} geometry={nodes.Cube017.geometry} material={materials['Material.006']} position={[-1.028, 1.12, -12.811]} scale={[0.7, 0.1, 6.81]} />
      <mesh ref={ref16} geometry={nodes.Cube018.geometry} material={materials['Material.006']} position={[9.755, 1.12, -12.811]} scale={[0.7, 0.1, 6.81]} />
      <mesh ref={ref17} geometry={nodes.Cube019.geometry} material={materials['Material.006']} position={[19, 1.12, -12.811]} scale={[0.7, 0.1, 6.81]} />
    </group>
  )
}

useGLTF.preload('/wall.gltf')
